from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import CommandStart, Command
from aiogram.fsm.context import FSMContext
from database import Database
from keyboards import get_main_menu_kb, get_games_kb
from states import ProfileCreation
from config import GAMES

router = Router()
db = Database()


@router.message(CommandStart())
async def cmd_start(message: Message, state: FSMContext):
    await state.clear()

    user_id = message.from_user.id
    username = message.from_user.username or message.from_user.first_name

    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
    await db.add_user(user_id, username)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø—Ä–æ—Ñ–∏–ª–µ–π
    games = await db.get_user_games(user_id)

    if games:
        await message.answer(
            f"üëã –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {message.from_user.first_name}!\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤ –º–µ–Ω—é:",
            reply_markup=get_main_menu_kb(has_profile=True)
        )
    else:
        await message.answer(
            f"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ TeamFinder!\n\n"
            "üéÆ –≠—Ç–æ –±–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ç–∏–º–º–µ–π—Ç–æ–≤ –≤ CS2 –∏ Dota 2.\n\n"
            "–î–ª—è –Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –∞–Ω–∫–µ—Ç—É:",
            reply_markup=get_main_menu_kb(has_profile=False)
        )


@router.message(F.text == "üìù –°–æ–∑–¥–∞—Ç—å –∞–Ω–∫–µ—Ç—É")
async def create_profile(message: Message, state: FSMContext):
    await message.answer(
        "üéÆ –í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä—É –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞–Ω–∫–µ—Ç—ã:",
        reply_markup=get_games_kb()
    )
    await state.set_state(ProfileCreation.choosing_game)


@router.message(F.text == "üéÆ –°–º–µ–Ω–∏—Ç—å –∏–≥—Ä—É")
async def change_game(message: Message, state: FSMContext):
    user_id = message.from_user.id
    games = await db.get_user_games(user_id)

    text = "üéÆ –í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä—É:\n\n"
    if games:
        for game in games:
            text += f"‚úÖ {GAMES.get(game, game)} - –∞–Ω–∫–µ—Ç–∞ —Å–æ–∑–¥–∞–Ω–∞\n"

    await message.answer(text, reply_markup=get_games_kb())
    await state.set_state(ProfileCreation.choosing_game)


@router.callback_query(F.data == "to_menu")
async def to_menu(callback: CallbackQuery, state: FSMContext):
    await state.clear()
    user_id = callback.from_user.id
    games = await db.get_user_games(user_id)

    await callback.message.answer(
        "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
        reply_markup=get_main_menu_kb(has_profile=bool(games))
    )
    await callback.answer()